#!/bin/bash

### BEGIN INIT INFO
# Provides: ssh_forward
# Required-Start: $local_fs $remote_fs $network $named 
# Required-Stop: $local_fs $remote_fs $network $named 
# Should-Start: $time
# Default-Start: 2 3 4 5
# Default-Stop:
# Short-Description: ssh_forward
# Description: ssh_forward
### END INIT INFO

NAME=ssh_forward
PID_BASE=/var/run/ssh_forward
CONF_DIR=/etc/ssh_forward
BIN=/usr/bin/autossh

env

do_start()
{
	do_stop
	
	IFS_ORIG="$IFS"
	IFS_LINEBREAK="$(printf '\n\r')"
	IFS="$IFS_LINEBREAK"

	config_lines=$(cat "$CONF_DIR"/*.conf 2>/dev/null | sed 's/^[\t ]*//g'| sed 's/#.*$//g' | egrep "^[LRDlrd]"  |  awk '{ if ( NF >= 4 ) { print $0  }  }')
	pidnum="1"
	for line in $config_lines ; do
		is_l=$( echo "$line" | egrep "^[Ll]")
		is_r=$( echo "$line" | egrep "^[Rr]")
		is_d=$( echo "$line" | egrep "^[Dd]")
		pid_file="${PID_BASE}_${pidnum}.pid"
		
		remote_host=$( echo "$line" | awk ' { print $2 } ')
		remote_user=$( echo "$line" | awk ' { print $3 } ')
		local_port=$(  echo "$line" | awk ' { print $4 } ')
		remote_port=$( echo "$line" | awk '  { if ( NF >4 ) {  print $5 } else { print $4 } ; } ')

		if [ -n "${is_l}${is_r}${is_d}" ] ; then

			AUTOSSH_PIDFILE="$pid_file"
			#AUTOSSH_GATETIME=0
			#AUTOSSH_FIRST_POLL=10
        		#AUTOSSH_POLL=60

			export AUTOSSH_PIDFILE
			#export AUTOSSH_GATETIME
			#export AUTOSSH_FIRST_POLL
        		#export AUTOSSH_POLL



			if   [ -n "$is_l" ] ; then
				$BIN -f -N -2 -o StrictHostKeyChecking=no -o PubkeyAuthentication=yes -o BatchMode=yes  -L ${local_port}:${remote_host}:${remote_port} -i /root/.ssh/id_rsa 127.0.0.1
			elif [ -n "$is_r" ] ; then
				$BIN -f -N -2 -o StrictHostKeyChecking=no -o PubkeyAuthentication=yes -o BatchMode=yes  -R ${remote_port}:127.0.0.1:${local_port} -i /root/.ssh/id_rsa ${remote_user}@${remote_host}
			elif [ -n "$is_d" ] ; then
				$BIN -f -N -2 -o StrictHostKeyChecking=no -o PubkeyAuthentication=yes -o BatchMode=yes  -D $local_port -i /root/.ssh/id_rsa ${remote_user}@${remote_host}
			fi
			
			pidnum=$(( $pidnum + 1 ))
		fi

	done


	IFS="$IFS_ORIG"

}

do_stop()
{
	for pidf in ${PID_BASE}*.pid ; do
		pid=$(cat "$pidf" 2>/dev/null)
		if [ -n "$pid" ] ; then
			kill $pid 2>/dev/null
		fi
	done
	sleep 2
	for pidf in ${PID_BASE}*.pid ; do
		pid=$(cat "$pidf" 2>/dev/null)
		if [ -n "$pid" ] ; then
			kill -9 $pid 2>/dev/null
		fi
	done

}

case "$1" in
  start)
  	do_start
	;;
  stop)
	do_stop
  	;;
  restart)
	do_start
	;;
  *)
	N=/etc/init.d/$NAME
	echo "Usage: $N {start|stop|restart}" >&2
	exit 1
	;;
esac

exit 0

